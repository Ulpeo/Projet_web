{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emmam\\\\Documents\\\\ECE Paris\\\\ING4\\\\TechnoWeb\\\\Projet_web\\\\frontend\\\\src\\\\home\\\\meteo.js\";\nimport './meteo.css';\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Meteo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meteo\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"alata\",\n      children: \"M\\xE9t\\xE9o \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n// Clé api\n_c = Meteo;\nconst API_KEY = \"4081444b7b90198136fefe6ed4ccf35b\";\n// Url API\nconst API_URL = \"https://api.openweathermap.org/data/2.5/forecast/daily\";\n// Base source icon\nconst API_URL_ICON = \"http://openweathermap.org/img/wn/\";\nclass API_WEATHER {\n  constructor(city) {\n    // Si la ville n'est pas définit alors la ville par défault est Paris\n    if (city === undefined) {\n      city = \"brest\";\n    }\n    this.city = city;\n  }\n\n  // Faire la requete à l'API openweathermap\n  // Retourne une promise\n  fetchTodayForecast() {\n    return axios.get(`${API_URL}?q=${this.city}&cnt=4&units=metric&appid=${API_KEY}`, {\n      crossdomain: true\n    });\n  }\n\n  // Retourne l'element HTML de l'icon symbolisant la méteo.\n  getHTMLElementFromIcon(icon) {\n    return `<img src=${API_URL_ICON}${icon}@2x.png class=\"weather-icon\"/>`;\n  }\n}\nexport default Meteo;\nvar _c;\n$RefreshReg$(_c, \"Meteo\");","map":{"version":3,"names":["React","useEffect","Meteo","API_KEY","API_URL","API_URL_ICON","API_WEATHER","constructor","city","undefined","fetchTodayForecast","axios","get","crossdomain","getHTMLElementFromIcon","icon"],"sources":["C:/Users/emmam/Documents/ECE Paris/ING4/TechnoWeb/Projet_web/frontend/src/home/meteo.js"],"sourcesContent":["import './meteo.css';\r\nimport React, { useEffect } from \"react\";\r\n\r\nfunction Meteo() {\r\n\r\n    return (\r\n        <div className=\"meteo\" >\r\n\r\n            <h2 className=\"alata\">Météo </h2>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n// Clé api\r\nconst API_KEY = \"4081444b7b90198136fefe6ed4ccf35b\";\r\n// Url API\r\nconst API_URL = \"https://api.openweathermap.org/data/2.5/forecast/daily\";\r\n// Base source icon\r\nconst API_URL_ICON = \"http://openweathermap.org/img/wn/\";\r\n\r\n\r\nclass API_WEATHER {\r\n  constructor(city) {\r\n    // Si la ville n'est pas définit alors la ville par défault est Paris\r\n    if (city === undefined) {\r\n      city = \"brest\";\r\n    }\r\n    this.city = city;\r\n  }\r\n\r\n  // Faire la requete à l'API openweathermap\r\n  // Retourne une promise\r\n  fetchTodayForecast() {\r\n    return axios\r\n      .get(`${API_URL}?q=${this.city}&cnt=4&units=metric&appid=${API_KEY}`, {\r\n        crossdomain: true\r\n      })\r\n  }\r\n\r\n  // Retourne l'element HTML de l'icon symbolisant la méteo.\r\n  getHTMLElementFromIcon(icon) {\r\n    return `<img src=${API_URL_ICON}${icon}@2x.png class=\"weather-icon\"/>`\r\n  }\r\n}\r\n\r\nexport default Meteo;"],"mappings":";AAAA,OAAO,aAAa;AACpB,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAEzC,SAASC,KAAK,GAAG;EAEb,oBACI;IAAK,SAAS,EAAC,OAAO;IAAA,uBAElB;MAAI,SAAS,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAY;IAAA;IAAA;IAAA;EAAA,QAC/B;AAGd;;AAEA;AAAA,KAXSA,KAAK;AAYd,MAAMC,OAAO,GAAG,kCAAkC;AAClD;AACA,MAAMC,OAAO,GAAG,wDAAwD;AACxE;AACA,MAAMC,YAAY,GAAG,mCAAmC;AAGxD,MAAMC,WAAW,CAAC;EAChBC,WAAW,CAACC,IAAI,EAAE;IAChB;IACA,IAAIA,IAAI,KAAKC,SAAS,EAAE;MACtBD,IAAI,GAAG,OAAO;IAChB;IACA,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;;EAEA;EACA;EACAE,kBAAkB,GAAG;IACnB,OAAOC,KAAK,CACTC,GAAG,CAAE,GAAER,OAAQ,MAAK,IAAI,CAACI,IAAK,6BAA4BL,OAAQ,EAAC,EAAE;MACpEU,WAAW,EAAE;IACf,CAAC,CAAC;EACN;;EAEA;EACAC,sBAAsB,CAACC,IAAI,EAAE;IAC3B,OAAQ,YAAWV,YAAa,GAAEU,IAAK,gCAA+B;EACxE;AACF;AAEA,eAAeb,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}