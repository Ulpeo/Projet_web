{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emmam\\\\Documents\\\\ECE Paris\\\\ING4\\\\TechnoWeb\\\\Projet_web\\\\frontend\\\\src\\\\home\\\\meteo.js\";\nimport './meteo.css';\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Meteo() {\n  console.info(city);\n  // Création de l'objet apiWeather\n  const apiWeather = new API_WEATHER(city);\n  // Appel de la fonction fetchTodayForecast\n\n  apiWeather.fetchTodayForecast().then(function (response) {\n    // Récupère la donnée d'une API\n    const data = response.data.list;\n    for (let i = 0; i < 4; i++) {\n      // On récupère l'information principal\n      const main = data[i].weather[0].main;\n      const description = data[i].weather[0].description;\n      const temp = data[i].temp.day;\n      const icon = apiWeather.getHTMLElementFromIcon(data[i].weather[0].icon);\n\n      // Modifier le DOM\n      document.getElementById(`day${i}-forecast-main`).innerHTML = main;\n      document.getElementById(`day${i}-forecast-more-info`).innerHTML = description;\n      document.getElementById(`day${i}-icon-weather-container`).innerHTML = icon;\n      document.getElementById(`day${i}-forecast-temp`).innerHTML = `${temp}°C`;\n    }\n  }).catch(function (error) {\n    // Affiche une erreur\n    console.error(error);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meteo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"alata\",\n      children: \"M\\xE9t\\xE9o \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"day0-forecast-main\",\n      children: \"hey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n// Clé api\n_c = Meteo;\nconst API_KEY = \"4081444b7b90198136fefe6ed4ccf35b\";\n// Url API\nconst API_URL = \"https://api.openweathermap.org/data/2.5/forecast/daily\";\n// Base source icon\nconst API_URL_ICON = \"http://openweathermap.org/img/wn/\";\nclass API_WEATHER {\n  constructor(city) {\n    // Si la ville n'est pas définit alors la ville par défault est Paris\n    if (city === undefined) {\n      city = \"brest\";\n    }\n    this.city = \"brest\";\n  }\n\n  // Faire la requete à l'API openweathermap\n  // Retourne une promise\n  fetchTodayForecast() {\n    return axios.get(`${API_URL}?q=${this.city}&cnt=4&units=metric&appid=${API_KEY}`, {\n      crossdomain: true\n    });\n  }\n\n  // Retourne l'element HTML de l'icon symbolisant la méteo.\n  getHTMLElementFromIcon(icon) {\n    return `<img src=${API_URL_ICON}${icon}@2x.png class=\"weather-icon\"/>`;\n  }\n}\nexport default Meteo;\nvar _c;\n$RefreshReg$(_c, \"Meteo\");","map":{"version":3,"names":["React","useEffect","axios","Meteo","console","info","city","apiWeather","API_WEATHER","fetchTodayForecast","then","response","data","list","i","main","weather","description","temp","day","icon","getHTMLElementFromIcon","document","getElementById","innerHTML","catch","error","API_KEY","API_URL","API_URL_ICON","constructor","undefined","get","crossdomain"],"sources":["C:/Users/emmam/Documents/ECE Paris/ING4/TechnoWeb/Projet_web/frontend/src/home/meteo.js"],"sourcesContent":["import './meteo.css';\r\nimport React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nfunction Meteo() {\r\n\r\n    \r\n        console.info(city)\r\n        // Création de l'objet apiWeather\r\n        const apiWeather = new API_WEATHER(city);\r\n        // Appel de la fonction fetchTodayForecast\r\n      \r\n        apiWeather\r\n          .fetchTodayForecast()\r\n          .then(function (response) {\r\n            // Récupère la donnée d'une API\r\n            const data = response.data.list;\r\n      \r\n            for (let i = 0; i < 4; i++) {\r\n              // On récupère l'information principal\r\n              const main = data[i].weather[0].main;\r\n              const description = data[i].weather[0].description;\r\n              const temp = data[i].temp.day;\r\n              const icon = apiWeather.getHTMLElementFromIcon(data[i].weather[0].icon);\r\n      \r\n              // Modifier le DOM\r\n              document.getElementById(`day${i}-forecast-main`).innerHTML = main;\r\n              document.getElementById(`day${i}-forecast-more-info`).innerHTML = description;\r\n              document.getElementById(`day${i}-icon-weather-container`).innerHTML = icon;\r\n              document.getElementById(`day${i}-forecast-temp`).innerHTML = `${temp}°C`;\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            // Affiche une erreur\r\n            console.error(error);\r\n          });\r\n      \r\n\r\n    return (\r\n        <div className=\"meteo\" >\r\n\r\n            <h2 className=\"alata\">Météo </h2>\r\n            <div id='day0-forecast-main'>hey</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n// Clé api\r\nconst API_KEY = \"4081444b7b90198136fefe6ed4ccf35b\";\r\n// Url API\r\nconst API_URL = \"https://api.openweathermap.org/data/2.5/forecast/daily\";\r\n// Base source icon\r\nconst API_URL_ICON = \"http://openweathermap.org/img/wn/\";\r\n\r\n\r\nclass API_WEATHER {\r\n  constructor(city) {\r\n    // Si la ville n'est pas définit alors la ville par défault est Paris\r\n    if (city === undefined) {\r\n      city = \"brest\";\r\n    }\r\n    this.city = \"brest\";\r\n  }\r\n\r\n  // Faire la requete à l'API openweathermap\r\n  // Retourne une promise\r\n  fetchTodayForecast() {\r\n    return axios\r\n      .get(`${API_URL}?q=${this.city}&cnt=4&units=metric&appid=${API_KEY}`, {\r\n        crossdomain: true\r\n      })\r\n  }\r\n\r\n  // Retourne l'element HTML de l'icon symbolisant la méteo.\r\n  getHTMLElementFromIcon(icon) {\r\n    return `<img src=${API_URL_ICON}${icon}@2x.png class=\"weather-icon\"/>`\r\n  }\r\n}\r\n\r\nexport default Meteo;"],"mappings":";AAAA,OAAO,aAAa;AACpB,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAC1B,SAASC,KAAK,GAAG;EAGTC,OAAO,CAACC,IAAI,CAACC,IAAI,CAAC;EAClB;EACA,MAAMC,UAAU,GAAG,IAAIC,WAAW,CAACF,IAAI,CAAC;EACxC;;EAEAC,UAAU,CACPE,kBAAkB,EAAE,CACpBC,IAAI,CAAC,UAAUC,QAAQ,EAAE;IACxB;IACA,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI,CAACC,IAAI;IAE/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B;MACA,MAAMC,IAAI,GAAGH,IAAI,CAACE,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI;MACpC,MAAME,WAAW,GAAGL,IAAI,CAACE,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW;MAClD,MAAMC,IAAI,GAAGN,IAAI,CAACE,CAAC,CAAC,CAACI,IAAI,CAACC,GAAG;MAC7B,MAAMC,IAAI,GAAGb,UAAU,CAACc,sBAAsB,CAACT,IAAI,CAACE,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CAACI,IAAI,CAAC;;MAEvE;MACAE,QAAQ,CAACC,cAAc,CAAE,MAAKT,CAAE,gBAAe,CAAC,CAACU,SAAS,GAAGT,IAAI;MACjEO,QAAQ,CAACC,cAAc,CAAE,MAAKT,CAAE,qBAAoB,CAAC,CAACU,SAAS,GAAGP,WAAW;MAC7EK,QAAQ,CAACC,cAAc,CAAE,MAAKT,CAAE,yBAAwB,CAAC,CAACU,SAAS,GAAGJ,IAAI;MAC1EE,QAAQ,CAACC,cAAc,CAAE,MAAKT,CAAE,gBAAe,CAAC,CAACU,SAAS,GAAI,GAAEN,IAAK,IAAG;IAC1E;EACF,CAAC,CAAC,CACDO,KAAK,CAAC,UAAUC,KAAK,EAAE;IACtB;IACAtB,OAAO,CAACsB,KAAK,CAACA,KAAK,CAAC;EACtB,CAAC,CAAC;EAGR,oBACI;IAAK,SAAS,EAAC,OAAO;IAAA,wBAElB;MAAI,SAAS,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAY,eACjC;MAAK,EAAE,EAAC,oBAAoB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAU;EAAA;IAAA;IAAA;IAAA;EAAA,QACpC;AAGd;;AAEA;AAAA,KA5CSvB,KAAK;AA6Cd,MAAMwB,OAAO,GAAG,kCAAkC;AAClD;AACA,MAAMC,OAAO,GAAG,wDAAwD;AACxE;AACA,MAAMC,YAAY,GAAG,mCAAmC;AAGxD,MAAMrB,WAAW,CAAC;EAChBsB,WAAW,CAACxB,IAAI,EAAE;IAChB;IACA,IAAIA,IAAI,KAAKyB,SAAS,EAAE;MACtBzB,IAAI,GAAG,OAAO;IAChB;IACA,IAAI,CAACA,IAAI,GAAG,OAAO;EACrB;;EAEA;EACA;EACAG,kBAAkB,GAAG;IACnB,OAAOP,KAAK,CACT8B,GAAG,CAAE,GAAEJ,OAAQ,MAAK,IAAI,CAACtB,IAAK,6BAA4BqB,OAAQ,EAAC,EAAE;MACpEM,WAAW,EAAE;IACf,CAAC,CAAC;EACN;;EAEA;EACAZ,sBAAsB,CAACD,IAAI,EAAE;IAC3B,OAAQ,YAAWS,YAAa,GAAET,IAAK,gCAA+B;EACxE;AACF;AAEA,eAAejB,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}